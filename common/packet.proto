syntax = "proto3";

package mcc;

message OnlineUser {
    optional uint32 user_id = 1;
    optional string username = 2;
}

message Packet {
    optional Header hdr = 1;
    optional RequestRegister req_reg = 2;
    optional RequestUsers req_users = 3;
    optional RequestSend req_send = 4;
    optional RequestRecv req_recv = 5;
    optional RespRegister resp_reg = 6;
    optional RespUsers resp_users = 7;
    optional RespSend resp_send = 8;
    optional RespRecv resp_recv = 9;
}


message Header{
    enum PacketType {
        PACKET_TYPE_REQUEST_REGISTER = 0;
        PACKET_TYPE_REQUEST_USERS = 1;
        PACKET_TYPE_REQUEST_SEND = 2;
        PACKET_TYPE_REQUEST_RECV = 3;
        PACKET_TYPE_RESP_REGISTER = 4;
        PACKET_TYPE_RESP_USERS = 5;
        PACKET_TYPE_RESP_SEND = 6;
        PACKET_TYPE_RESP_RECV = 7;
    }
    
    optional PacketType packet_type = 1;    
}

message UserMessage {
    optional uint32 user_id = 1;
    optional string message = 2;
}

message RequestRegister {
    optional string username = 1;
}

message RequestUsers {
    optional uint32 requestor_id = 1;
}

message RequestSend {
    optional uint32 source_id = 1;
    optional uint32 target_id = 2;
    optional string message = 3;

}

message RequestRecv {
    optional uint32 requestor_id = 1;
}

message RespRegister {
    optional uint32 resp_value = 1;
    optional uint32 assigned_id = 2;
}

message RespUsers {
    optional uint32 resp_value = 1;
    repeated OnlineUser online_users = 2;
}

message RespSend {
    optional uint32 resp_value = 1;
}

message RespRecv {
    optional uint32 resp_value = 1;
    repeated UserMessage messages = 2;
}